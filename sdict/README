ABOUT:
Sdict dictionary application.

REQUIREMENTS:
Primary requirement is Tcl/Tk distiribution. Depending of your OS
fetch one of:
Tcl/Tk >= 8.4 (www.tcl.tk) (most suited for unix users)
ActiveTcl >= 8.4 (www.activestate.com) (for Windows users)
eTcl >= 8.4 (www.evolane.com) (if you want install on WinCE)
Please note, Tcl come in with many major Unix/Linux distribution,
just check you own package repository and install it.

INSTALLATION:
On Unix:
First, check out that Tcl/Tk installed on your system: just type tclsh
on command prompt. If you put to Tcl shell with prompt sign %, when
type: info tclversion and check installed Tcl version.
In case of various Tcl versions installed you need to manual edit
Makefile and to customize TCLSH variable to point proper tclsh binary,
not full path!
Next, unpack sdict sources and cd to:
	$ tar -zxf sdict-0.1.tar.gz
	$ cd sdict-0.1
Sdict, by default, installed under /usr/local. If it is not suit then 
open Makefile with your favourite editor and change PREFIX variable
to your directory. Depending on directory in PREFIX you may need
root access to install Sdict. Suppose, PREFIX is /usr/local then
become root and type:
	# make install
Next, you need StarDict dictionary, fetch one of many from StarDict
page. Create directory .dict in your home directory:
	$ mkdir ~/.dict
Unpack and copy dictionary files to this directory. And finally,
copy file sdictrc.sample from source distribution to home:
	$ cp sdictrc.sample ~/.sdictrc

On Windows:
Fetch and install Tcl/Tk, I recommended ActiveTcl, but you may try
another distribution like WinTcl (not tested).
Also, if you need, fetch dictionaries from StarDict page and unpack
it to somewhere (for example, C:\DictCache).
Unpack Sdict source archive to (for example, C:\Sdict) and rename
sdictrc.sample to sdictrc, then edit sdictrc such as:
	search C:\DictCache
	cachedir C:\DictCache
Next, open command line session, cd to C:\Sdict and type:
	C:\Sdict> tclsh sdict.tcl -cq
After, successful generating cache files, you may launch Sdict by
double-clicking to sdict.tcl (only, if you Tcl distribution link
.tcl extension with tclsh).

Notes about Windows CE (Smartphones, PocketPC):
To install on WinCE device, you need fetch and install Evolane
Tcl/Tk distribution (www.evolane.com).
Unpack on PC host sdict archive and edit sdictrc to suit path
directories relatively to WinCE device (please note, on WinCE no
volumes (C:\, D:\, etc) like on Windows), for example:
	search \sdict\dict
	cachedir \sdict\dict
or if you have storage card:
	search \Storage Card\sdict\dict
	cachedir \Storage Card\sdict\dict
Then copy all files to WinCE device.
Dont ever try to run Sdict without cache files! Create cache files
first on PC host and only then copy to device.

CONFIGURATION:
Sdict controlled by configuration file: sdictrc. By default, it must
be located in your home directory, but there are few ways to point
another locate configuration:
1. By environment variable SDICTRC
2. By command line option -rc
WARNING! Configuration file on every time on exit is overwrited!
Configuration options founded in sdictrc:
search 	(required)
	point to directory where search dictionaries, your may
	define as many directories as you want in search options.
	By default:
	search /usr/share/dict
	search /usr/local/share/dict
	search ~/.dict

cachedir (required)
	point to directory where located cache files, it directory
	must be exists, create one yourself if it not exists.
	By default:
	cachedir ~/.dict
font	(optional)
	use font for output text.
	By default:
	font fixed
fontsize (optional)
	size of font for output text.
	By default:
	fontsize 10
autoclear (optional)
	do not append translated text to the end of output, 
	instead cleat output.

COMMAND LINE:
-d	show dictionary names and exit
-c	create cache files (see below)
-cq	create cache files and exit (see below)
-rc	use another config file
-b	use only selected dictionary, it may be enumarated by comma
other arguments treated as words, Sdict translate words, output to
console and exit.

CACHE:
To improve speed up Sdict, you must create dictionary cache. In case
of using new dictionary, first of all create cache by command:
	$ sdict -c 	<- create caches for all dictionaries
or:
	$ sdict -d		<- find dict in output which you want
	$ sdict -cq -b dict 	<- where dict for cache building

LINKS:
Home site: sdict.berlios.de
StarDict and dictionaries: stardict.sourceforge.net
Describing of StarDict's dictionary format: see doc/DICTFILE_FORMAT
